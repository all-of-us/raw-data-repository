"""add version and sample history

Revision ID: 35c81124667b
Revises: 075b9eee88b7
Create Date: 2018-09-12 15:06:23.538269

"""
from alembic import op
import sqlalchemy as sa
import model.utils


from participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from participant_enums import WithdrawalStatus, SuspensionStatus, QuestionnaireDefinitionStatus
from participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from participant_enums import MetricSetType, MetricsKey
from model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus
from model.code import CodeType

# revision identifiers, used by Alembic.
revision = '35c81124667b'
down_revision = '075b9eee88b7'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()



def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('biobank_history',
    sa.Column('biobank_order_id', sa.String(length=80), nullable=False),
    sa.Column('source_username', sa.String(length=255), nullable=True),
    sa.Column('collected_username', sa.String(length=255), nullable=True),
    sa.Column('processed_username', sa.String(length=255), nullable=True),
    sa.Column('finalized_username', sa.String(length=255), nullable=True),
    sa.Column('order_status', model.utils.Enum(BiobankOrderStatus), nullable=True),
    sa.Column('amended_reason', sa.UnicodeText(), nullable=True),
    sa.Column('last_modified', model.utils.UTCDateTime(), nullable=True),
    sa.Column('restored_username', sa.String(length=255), nullable=True),
    sa.Column('restored_time', model.utils.UTCDateTime(), nullable=True),
    sa.Column('amended_username', sa.String(length=255), nullable=True),
    sa.Column('amended_time', model.utils.UTCDateTime(), nullable=True),
    sa.Column('cancelled_username', sa.String(length=255), nullable=True),
    sa.Column('cancelled_time', model.utils.UTCDateTime(), nullable=True),
    sa.Column('created', model.utils.UTCDateTime(), nullable=False),
    sa.Column('collected_note', sa.UnicodeText(), nullable=True),
    sa.Column('processed_note', sa.UnicodeText(), nullable=True),
    sa.Column('finalized_note', sa.UnicodeText(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('cancelled_site_id', sa.Integer(), nullable=True),
    sa.Column('finalized_site_id', sa.Integer(), nullable=True),
    sa.Column('amended_biobank_order_id', sa.String(length=80), nullable=True),
    sa.Column('restored_site_id', sa.Integer(), nullable=True),
    sa.Column('processed_site_id', sa.Integer(), nullable=True),
    sa.Column('collected_site_id', sa.Integer(), nullable=True),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('source_site_id', sa.Integer(), nullable=True),
    sa.Column('log_position_id', sa.Integer(), nullable=False),
    sa.Column('amended_site_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['amended_biobank_order_id'], ['biobank_order.biobank_order_id'], ),
    sa.ForeignKeyConstraint(['amended_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['cancelled_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['collected_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['finalized_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['log_position_id'], ['log_position.log_position_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.participant_id'], ),
    sa.ForeignKeyConstraint(['processed_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['restored_site_id'], ['site.site_id'], ),
    sa.ForeignKeyConstraint(['source_site_id'], ['site.site_id'], ),
    sa.PrimaryKeyConstraint('biobank_order_id', 'version')
    )
    op.create_table('biobank_order_identifier_history',
    sa.Column('system', sa.String(length=80), nullable=False),
    sa.Column('value', sa.String(length=80), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('biobank_order_id', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['biobank_order_id'], ['biobank_order.biobank_order_id'], ),
    sa.PrimaryKeyConstraint('system', 'value', 'version')
    )
    op.create_table('biobank_ordered_sample_history',
    sa.Column('test', sa.String(length=80), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=False),
    sa.Column('processing_required', sa.Boolean(), nullable=False),
    sa.Column('collected', model.utils.UTCDateTime(), nullable=True),
    sa.Column('processed', model.utils.UTCDateTime(), nullable=True),
    sa.Column('finalized', model.utils.UTCDateTime(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['biobank_order.biobank_order_id'], ),
    sa.PrimaryKeyConstraint('test', 'version', 'order_id')
    )
    op.add_column('biobank_order', sa.Column('amended_biobank_order_id', sa.String(length=80), nullable=True))
    op.add_column('biobank_order', sa.Column('amended_reason', sa.UnicodeText(), nullable=True))
    op.add_column('biobank_order', sa.Column('amended_site_id', sa.Integer(), nullable=True))
    op.add_column('biobank_order', sa.Column('amended_time', model.utils.UTCDateTime(), nullable=True))
    op.add_column('biobank_order', sa.Column('amended_username', sa.String(length=255), nullable=True))
    op.add_column('biobank_order', sa.Column('cancelled_site_id', sa.Integer(), nullable=True))
    op.add_column('biobank_order', sa.Column('cancelled_time', model.utils.UTCDateTime(), nullable=True))
    op.add_column('biobank_order', sa.Column('cancelled_username', sa.String(length=255), nullable=True))
    op.add_column('biobank_order', sa.Column('last_modified', model.utils.UTCDateTime(), nullable=True))
    op.add_column('biobank_order', sa.Column('order_status', model.utils.Enum(BiobankOrderStatus), nullable=True))
    op.add_column('biobank_order', sa.Column('restored_site_id', sa.Integer(), nullable=True))
    op.add_column('biobank_order', sa.Column('restored_time', model.utils.UTCDateTime(), nullable=True))
    op.add_column('biobank_order', sa.Column('restored_username', sa.String(length=255), nullable=True))
    op.add_column('biobank_order', sa.Column('version', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'biobank_order', 'site', ['amended_site_id'], ['site_id'])
    op.create_foreign_key(None, 'biobank_order', 'site', ['cancelled_site_id'], ['site_id'])
    op.create_foreign_key(None, 'biobank_order', 'site', ['restored_site_id'], ['site_id'])
    op.create_foreign_key(None, 'biobank_order', 'biobank_order', ['amended_biobank_order_id'], ['biobank_order_id'])
    # ### end Alembic commands ###


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'biobank_order', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', type_='foreignkey')
    op.drop_column('biobank_order', 'version')
    op.drop_column('biobank_order', 'restored_username')
    op.drop_column('biobank_order', 'restored_time')
    op.drop_column('biobank_order', 'restored_site_id')
    op.drop_column('biobank_order', 'order_status')
    op.drop_column('biobank_order', 'last_modified')
    op.drop_column('biobank_order', 'cancelled_username')
    op.drop_column('biobank_order', 'cancelled_time')
    op.drop_column('biobank_order', 'cancelled_site_id')
    op.drop_column('biobank_order', 'amended_username')
    op.drop_column('biobank_order', 'amended_time')
    op.drop_column('biobank_order', 'amended_site_id')
    op.drop_column('biobank_order', 'amended_reason')
    op.drop_column('biobank_order', 'amended_biobank_order_id')
    op.drop_table('biobank_ordered_sample_history')
    op.drop_table('biobank_order_identifier_history')
    op.drop_table('biobank_history')
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

