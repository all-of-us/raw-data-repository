"""Initial metrics

Revision ID: 508708c67d9f
Revises: 51415576d3e9
Create Date: 2017-12-08 18:44:08.904095

"""
from alembic import op
import sqlalchemy as sa
import model.utils


from participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from participant_enums import WithdrawalStatus, SuspensionStatus
from participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType
from participant_enums import MetricSetType, MetricsKey
from model.site_enums import SiteStatus
from model.code import CodeType

# revision identifiers, used by Alembic.
revision = '508708c67d9f'
down_revision = '51415576d3e9'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()



def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(u'biobank_order_ibfk_4', 'biobank_order', type_='foreignkey')
    op.drop_constraint(u'biobank_order_ibfk_2', 'biobank_order', type_='foreignkey')
    op.drop_constraint(u'biobank_order_ibfk_3', 'biobank_order', type_='foreignkey')
    op.drop_constraint(u'biobank_order_ibfk_5', 'biobank_order', type_='foreignkey')
    op.drop_constraint(u'biobank_order_ibfk_1', 'biobank_order', type_='foreignkey')
    op.drop_constraint(u'biobank_order_ibfk_6', 'biobank_order', type_='foreignkey')
    op.create_foreign_key(None, 'biobank_order', 'site', ['finalized_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'biobank_order', 'site', ['processed_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'biobank_order', 'log_position', ['log_position_id'], ['log_position_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'biobank_order', 'site', ['collected_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'biobank_order', 'site', ['source_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'biobank_order', 'participant', ['participant_id'], ['participant_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'biobank_order_identifier_ibfk_1', 'biobank_order_identifier', type_='foreignkey')
    op.create_foreign_key(None, 'biobank_order_identifier', 'biobank_order', ['biobank_order_id'], ['biobank_order_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'biobank_ordered_sample_ibfk_1', 'biobank_ordered_sample', type_='foreignkey')
    op.create_foreign_key(None, 'biobank_ordered_sample', 'biobank_order', ['order_id'], ['biobank_order_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'biobank_stored_sample_ibfk_1', 'biobank_stored_sample', type_='foreignkey')
    op.create_foreign_key(None, 'biobank_stored_sample', 'participant', ['biobank_id'], ['biobank_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'code_ibfk_2', 'code', type_='foreignkey')
    op.drop_constraint(u'code_ibfk_1', 'code', type_='foreignkey')
    op.create_foreign_key(None, 'code', 'code_book', ['code_book_id'], ['code_book_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'code', 'code', ['parent_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'code_history_ibfk_2', 'code_history', type_='foreignkey')
    op.drop_constraint(u'code_history_ibfk_1', 'code_history', type_='foreignkey')
    op.create_foreign_key(None, 'code_history', 'code', ['parent_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'code_history', 'code_book', ['code_book_id'], ['code_book_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'measurement_ibfk_3', 'measurement', type_='foreignkey')
    op.drop_constraint(u'measurement_ibfk_1', 'measurement', type_='foreignkey')
    op.drop_constraint(u'measurement_ibfk_2', 'measurement', type_='foreignkey')
    op.create_foreign_key(None, 'measurement', 'measurement', ['parent_id'], ['measurement_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'measurement', 'physical_measurements', ['physical_measurements_id'], ['physical_measurements_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'measurement', 'measurement', ['qualifier_id'], ['measurement_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'measurement_to_qualifier_ibfk_2', 'measurement_to_qualifier', type_='foreignkey')
    op.drop_constraint(u'measurement_to_qualifier_ibfk_1', 'measurement_to_qualifier', type_='foreignkey')
    op.create_foreign_key(None, 'measurement_to_qualifier', 'measurement', ['measurement_id'], ['measurement_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'measurement_to_qualifier', 'measurement', ['qualifier_id'], ['measurement_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'metrics_bucket_ibfk_1', 'metrics_bucket', type_='foreignkey')
    op.create_foreign_key(None, 'metrics_bucket', 'metrics_version', ['metrics_version_id'], ['metrics_version_id'], source_schema='rdr', referent_schema='rdr', ondelete='CASCADE')
    op.drop_constraint(u'organization_ibfk_1', 'organization', type_='foreignkey')
    op.create_foreign_key(None, 'organization', 'hpo', ['hpo_id'], ['hpo_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'participant_ibfk_1', 'participant', type_='foreignkey')
    op.create_foreign_key(None, 'participant', 'hpo', ['hpo_id'], ['hpo_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'participant_history_ibfk_1', 'participant_history', type_='foreignkey')
    op.create_foreign_key(None, 'participant_history', 'hpo', ['hpo_id'], ['hpo_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'participant_summary_ibfk_11', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_10', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_2', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_3', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_12', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_4', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_13', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_5', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_9', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_14', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_15', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_6', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_7', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_1', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_8', 'participant_summary', type_='foreignkey')
    op.drop_constraint(u'participant_summary_ibfk_16', 'participant_summary', type_='foreignkey')
    op.create_foreign_key(None, 'participant_summary', 'code', ['sexual_orientation_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['sex_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'hpo', ['hpo_id'], ['hpo_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['biospecimen_collected_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['gender_identity_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['physical_measurements_created_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['language_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['physical_measurements_finalized_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['biospecimen_finalized_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['biospecimen_processed_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'participant', ['participant_id'], ['participant_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['recontact_method_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['income_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'site', ['biospecimen_source_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['state_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'participant_summary', 'code', ['education_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'physical_measurements_ibfk_5', 'physical_measurements', type_='foreignkey')
    op.drop_constraint(u'physical_measurements_ibfk_3', 'physical_measurements', type_='foreignkey')
    op.drop_constraint(u'physical_measurements_ibfk_1', 'physical_measurements', type_='foreignkey')
    op.drop_constraint(u'physical_measurements_ibfk_2', 'physical_measurements', type_='foreignkey')
    op.drop_constraint(u'physical_measurements_ibfk_4', 'physical_measurements', type_='foreignkey')
    op.create_foreign_key(None, 'physical_measurements', 'physical_measurements', ['amended_measurements_id'], ['physical_measurements_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'physical_measurements', 'participant', ['participant_id'], ['participant_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'physical_measurements', 'site', ['finalized_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'physical_measurements', 'log_position', ['log_position_id'], ['log_position_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'physical_measurements', 'site', ['created_site_id'], ['site_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'questionnaire_concept_ibfk_1', 'questionnaire_concept', type_='foreignkey')
    op.drop_constraint(u'questionnaire_concept_ibfk_2', 'questionnaire_concept', type_='foreignkey')
    op.create_foreign_key(None, 'questionnaire_concept', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'questionnaire_concept', 'code', ['code_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'questionnaire_question_ibfk_1', 'questionnaire_question', type_='foreignkey')
    op.drop_constraint(u'questionnaire_question_ibfk_2', 'questionnaire_question', type_='foreignkey')
    op.create_foreign_key(None, 'questionnaire_question', 'code', ['code_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'questionnaire_question', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'questionnaire_response_ibfk_1', 'questionnaire_response', type_='foreignkey')
    op.drop_constraint(u'questionnaire_response_ibfk_2', 'questionnaire_response', type_='foreignkey')
    op.create_foreign_key(None, 'questionnaire_response', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'questionnaire_response', 'participant', ['participant_id'], ['participant_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'questionnaire_response_answer_ibfk_3', 'questionnaire_response_answer', type_='foreignkey')
    op.drop_constraint(u'questionnaire_response_answer_ibfk_1', 'questionnaire_response_answer', type_='foreignkey')
    op.drop_constraint(u'questionnaire_response_answer_ibfk_2', 'questionnaire_response_answer', type_='foreignkey')
    op.create_foreign_key(None, 'questionnaire_response_answer', 'questionnaire_response', ['questionnaire_response_id'], ['questionnaire_response_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'questionnaire_response_answer', 'code', ['value_code_id'], ['code_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'questionnaire_response_answer', 'questionnaire_question', ['question_id'], ['questionnaire_question_id'], source_schema='rdr', referent_schema='rdr')
    op.drop_constraint(u'site_ibfk_1', 'site', type_='foreignkey')
    op.drop_constraint(u'site_ibfk_2', 'site', type_='foreignkey')
    op.create_foreign_key(None, 'site', 'organization', ['organization_id'], ['organization_id'], source_schema='rdr', referent_schema='rdr')
    op.create_foreign_key(None, 'site', 'hpo', ['hpo_id'], ['hpo_id'], source_schema='rdr', referent_schema='rdr')
    # ### end Alembic commands ###


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'site', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'site', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'site_ibfk_2', 'site', 'organization', ['organization_id'], ['organization_id'])
    op.create_foreign_key(u'site_ibfk_1', 'site', 'hpo', ['hpo_id'], ['hpo_id'])
    op.drop_constraint(None, 'questionnaire_response_answer', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'questionnaire_response_answer', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'questionnaire_response_answer', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'questionnaire_response_answer_ibfk_2', 'questionnaire_response_answer', 'questionnaire_response', ['questionnaire_response_id'], ['questionnaire_response_id'])
    op.create_foreign_key(u'questionnaire_response_answer_ibfk_1', 'questionnaire_response_answer', 'questionnaire_question', ['question_id'], ['questionnaire_question_id'])
    op.create_foreign_key(u'questionnaire_response_answer_ibfk_3', 'questionnaire_response_answer', 'code', ['value_code_id'], ['code_id'])
    op.drop_constraint(None, 'questionnaire_response', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'questionnaire_response', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'questionnaire_response_ibfk_2', 'questionnaire_response', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'])
    op.create_foreign_key(u'questionnaire_response_ibfk_1', 'questionnaire_response', 'participant', ['participant_id'], ['participant_id'])
    op.drop_constraint(None, 'questionnaire_question', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'questionnaire_question', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'questionnaire_question_ibfk_2', 'questionnaire_question', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'])
    op.create_foreign_key(u'questionnaire_question_ibfk_1', 'questionnaire_question', 'code', ['code_id'], ['code_id'])
    op.drop_constraint(None, 'questionnaire_concept', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'questionnaire_concept', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'questionnaire_concept_ibfk_2', 'questionnaire_concept', 'questionnaire_history', ['questionnaire_id', 'questionnaire_version'], ['questionnaire_id', 'version'])
    op.create_foreign_key(u'questionnaire_concept_ibfk_1', 'questionnaire_concept', 'code', ['code_id'], ['code_id'])
    op.drop_constraint(None, 'physical_measurements', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'physical_measurements', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'physical_measurements', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'physical_measurements', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'physical_measurements', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'physical_measurements_ibfk_4', 'physical_measurements', 'site', ['finalized_site_id'], ['site_id'])
    op.create_foreign_key(u'physical_measurements_ibfk_2', 'physical_measurements', 'log_position', ['log_position_id'], ['log_position_id'])
    op.create_foreign_key(u'physical_measurements_ibfk_1', 'physical_measurements', 'physical_measurements', ['amended_measurements_id'], ['physical_measurements_id'])
    op.create_foreign_key(u'physical_measurements_ibfk_3', 'physical_measurements', 'participant', ['participant_id'], ['participant_id'])
    op.create_foreign_key(u'physical_measurements_ibfk_5', 'physical_measurements', 'site', ['created_site_id'], ['site_id'])
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'participant_summary', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'participant_summary_ibfk_16', 'participant_summary', 'site', ['biospecimen_finalized_site_id'], ['site_id'])
    op.create_foreign_key(u'participant_summary_ibfk_8', 'participant_summary', 'code', ['sex_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_1', 'participant_summary', 'code', ['education_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_7', 'participant_summary', 'code', ['recontact_method_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_6', 'participant_summary', 'participant', ['participant_id'], ['participant_id'])
    op.create_foreign_key(u'participant_summary_ibfk_15', 'participant_summary', 'site', ['biospecimen_source_site_id'], ['site_id'])
    op.create_foreign_key(u'participant_summary_ibfk_14', 'participant_summary', 'site', ['biospecimen_collected_site_id'], ['site_id'])
    op.create_foreign_key(u'participant_summary_ibfk_9', 'participant_summary', 'code', ['sexual_orientation_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_5', 'participant_summary', 'code', ['language_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_13', 'participant_summary', 'site', ['physical_measurements_created_site_id'], ['site_id'])
    op.create_foreign_key(u'participant_summary_ibfk_4', 'participant_summary', 'code', ['income_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_12', 'participant_summary', 'site', ['physical_measurements_finalized_site_id'], ['site_id'])
    op.create_foreign_key(u'participant_summary_ibfk_3', 'participant_summary', 'hpo', ['hpo_id'], ['hpo_id'])
    op.create_foreign_key(u'participant_summary_ibfk_2', 'participant_summary', 'code', ['gender_identity_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_10', 'participant_summary', 'code', ['state_id'], ['code_id'])
    op.create_foreign_key(u'participant_summary_ibfk_11', 'participant_summary', 'site', ['biospecimen_processed_site_id'], ['site_id'])
    op.drop_constraint(None, 'participant_history', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'participant_history_ibfk_1', 'participant_history', 'hpo', ['hpo_id'], ['hpo_id'])
    op.drop_constraint(None, 'participant', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'participant_ibfk_1', 'participant', 'hpo', ['hpo_id'], ['hpo_id'])
    op.drop_constraint(None, 'organization', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'organization_ibfk_1', 'organization', 'hpo', ['hpo_id'], ['hpo_id'])
    op.drop_constraint(None, 'metrics_bucket', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'metrics_bucket_ibfk_1', 'metrics_bucket', 'metrics_version', ['metrics_version_id'], ['metrics_version_id'], ondelete=u'CASCADE')
    op.drop_constraint(None, 'measurement_to_qualifier', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'measurement_to_qualifier', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'measurement_to_qualifier_ibfk_1', 'measurement_to_qualifier', 'measurement', ['measurement_id'], ['measurement_id'])
    op.create_foreign_key(u'measurement_to_qualifier_ibfk_2', 'measurement_to_qualifier', 'measurement', ['qualifier_id'], ['measurement_id'])
    op.drop_constraint(None, 'measurement', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'measurement', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'measurement', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'measurement_ibfk_2', 'measurement', 'physical_measurements', ['physical_measurements_id'], ['physical_measurements_id'])
    op.create_foreign_key(u'measurement_ibfk_1', 'measurement', 'measurement', ['parent_id'], ['measurement_id'])
    op.create_foreign_key(u'measurement_ibfk_3', 'measurement', 'measurement', ['qualifier_id'], ['measurement_id'])
    op.drop_constraint(None, 'code_history', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'code_history', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'code_history_ibfk_1', 'code_history', 'code_book', ['code_book_id'], ['code_book_id'])
    op.create_foreign_key(u'code_history_ibfk_2', 'code_history', 'code', ['parent_id'], ['code_id'])
    op.drop_constraint(None, 'code', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'code', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'code_ibfk_1', 'code', 'code_book', ['code_book_id'], ['code_book_id'])
    op.create_foreign_key(u'code_ibfk_2', 'code', 'code', ['parent_id'], ['code_id'])
    op.drop_constraint(None, 'biobank_stored_sample', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'biobank_stored_sample_ibfk_1', 'biobank_stored_sample', 'participant', ['biobank_id'], ['biobank_id'])
    op.drop_constraint(None, 'biobank_ordered_sample', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'biobank_ordered_sample_ibfk_1', 'biobank_ordered_sample', 'biobank_order', ['order_id'], ['biobank_order_id'])
    op.drop_constraint(None, 'biobank_order_identifier', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'biobank_order_identifier_ibfk_1', 'biobank_order_identifier', 'biobank_order', ['biobank_order_id'], ['biobank_order_id'])
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.drop_constraint(None, 'biobank_order', schema='rdr', type_='foreignkey')
    op.create_foreign_key(u'biobank_order_ibfk_6', 'biobank_order', 'site', ['collected_site_id'], ['site_id'])
    op.create_foreign_key(u'biobank_order_ibfk_1', 'biobank_order', 'log_position', ['log_position_id'], ['log_position_id'])
    op.create_foreign_key(u'biobank_order_ibfk_5', 'biobank_order', 'site', ['processed_site_id'], ['site_id'])
    op.create_foreign_key(u'biobank_order_ibfk_3', 'biobank_order', 'site', ['finalized_site_id'], ['site_id'])
    op.create_foreign_key(u'biobank_order_ibfk_2', 'biobank_order', 'participant', ['participant_id'], ['participant_id'])
    op.create_foreign_key(u'biobank_order_ibfk_4', 'biobank_order', 'site', ['source_site_id'], ['site_id'])
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metric_set',
    sa.Column('metric_set_id', sa.String(length=50), nullable=False),
    sa.Column('metric_set_type', model.utils.Enum(MetricSetType), nullable=False),
    sa.PrimaryKeyConstraint('metric_set_id'),
    schema='metrics'
    )
    op.create_table('aggregate_metrics',
    sa.Column('metric_set_id', sa.String(length=50), nullable=False),
    sa.Column('metrics_key', model.utils.Enum(MetricsKey), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['metric_set_id'], [u'metrics.metric_set.metric_set_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('metric_set_id', 'metrics_key', 'value'),
    schema='metrics'
    )
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('aggregate_metrics', schema='metrics')
    op.drop_table('metric_set', schema='metrics')
    # ### end Alembic commands ###

