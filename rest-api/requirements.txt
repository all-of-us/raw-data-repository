
## Notes
#
# tools/setup_env.py installs all of these packages to ./libs/.  Additional
# packages are installed to the venv (not ./libs/) from rdr_client/requirements.txt
# and hard coded packages in setup_env.py.
#


## google packages
#
# This project is highly integrated with the Google Cloud SDK.  GCS is a set
# of commandline tools that currently require python 2.7. There does seem to some
# effort by Google to port GCS to python 3.x, but it is experimental and limited to only
# the 'gcloud' executable.
#
# Most, if not all, of the GCS CLI functionality is replicated in the
# googleapis/google-cloud-platform project, which is compatible with python 3.x
# https://stackoverflow.com/questions/41326125/google-cloud-sdk-vs-google-cloud-client-libraries
#
# cloudstorage_api docs are at
# cloud.google.com/appengine/docs/standard/python/googlecloudstorageclient/read-write-to-cloud-storage
# python 2.7 only, IE: import cloudstorage
GoogleAppEngineCloudStorageClient>=1.9.21
# IE: import pipeline, used with mapreduce
GoogleAppEnginePipeline>=1.9.21
# IE: import apiclient
google-api-python-client==1.6.6
# protorpc seems like an abandoned project
protorpc>=0.12.0
googlemaps>=2.5.1

## unit testing packages
mock>=1.0.1
Faker==0.7.3
# isodate only used in database_test.py
isodate==0.5.4
parameterized>=0.6.1

## web service packages
flask==0.10
flask-restful==0.3.5
Werkzeug==0.11.11
backoff
# rdr_client/requirements.txt specifies oauth2client==3.0.0? Oauth2client(4.0.0)
# is installed to ./libs/ but oauth2client(3.0.0) is installed to venv...
oauth2client>=4.0.0

## database packages
sqlalchemy>=1.2
alembic>=0.8.10
dictalchemy>=0.1.2.7
MySQL-python>=1.2.5

## misc packages
# dnspython only used in gcloud_ips.py, IE: import dns.resolver
dnspython>=1.15.0
# SMART on FHIR protocol
fhirclient==1.0.6


## unused packages
blinker>=1.4
Graphy>=1.0.0
# mox is depreciated in favor of mock
mox>=0.5.3
netaddr>=0.7.18
simplejson>=3.6.5
