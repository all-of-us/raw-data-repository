dependencies:
  override:
    # chmod to address a Circle "bug", since gcloud lives at /opt
    # and wants to make a .staging directory (as a sibling!)
    # when upgrading or installing new components.
    - sudo chmod o+w /opt
    - pip install --upgrade httplib2 jira oauth2client parallel pylint

machine:
  services:
    - mysql

test:
  override:
    - ./ci/test.sh

deployment:
  # Deploy master to the pmi-drc-api-test project whenever the tests pass
  test:
    branch: master
    commands:
      - ./ci/activate_creds.sh ~/gcloud-credentials.key
      - ./ci/deploy.sh pmi-drc-api-test config/config_test.json ~/gcloud-credentials.key
      - ./rest-api/test/test_server.sh -i https://pmi-drc-api-test.appspot.com

  # To deploy to staging, cut a GitHub release on a green build, with tag of
  # the form v0-1-1-rc0. We use tags as AppEngine version names, so they must
  # follow AE rules (no dots).
  staging:
    # This should match _RELEASE_TAG_RE in release_notes.py.
    tag: /v[0-9]+(-[0-9]+)*-rc[0-9]+[a-z]*/
    commands:
      - ./ci/activate_creds.sh ~/gcloud-credentials.key
      - ./ci/release_notes.py all-of-us-rdr-staging
      - ./ci/deploy.sh all-of-us-rdr-staging config/config_staging.json ~/gcloud-credentials.key
      - ./rest-api/test/test_server.sh -i https://all-of-us-rdr-staging.appspot.com

# Stable and production deployments are not done automatically but can be
# manually executed with the test.sh and deploy.sh pair, e.g.:
# ./ci/deploy.sh all-of-us-rdr-stable config/config_stable.json <configurator key file>
# ./ci/deploy.sh all-of-us-rdr config/config_prod.json <configurator key file>
