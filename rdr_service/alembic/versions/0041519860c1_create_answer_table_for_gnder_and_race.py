"""create answer table for gnder and race

Revision ID: 0041519860c1
Revises: 2697860e93f0
Create Date: 2019-06-20 10:40:24.812638

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

from rdr_service.model.base import add_table_history_table

# revision identifiers, used by Alembic.
revision = '0041519860c1'
down_revision = '2697860e93f0'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()



def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participant_gender_answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.participant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_race_answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('code_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['code_id'], ['code.code_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.participant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.execute('ALTER TABLE metrics_gender_cache ADD COLUMN type varchar(50) NOT NULL default \'METRICS_V2_API\' AFTER `date_inserted`;')
    op.execute('ALTER TABLE metrics_gender_cache DROP PRIMARY KEY')
    op.execute('ALTER TABLE metrics_gender_cache ADD PRIMARY KEY (`date_inserted`,`type`,`enrollment_status`,`hpo_id`,`hpo_name`,`date`,`gender_name`)')

    op.execute('ALTER TABLE metrics_race_cache ADD COLUMN type varchar(50) NOT NULL default \'METRICS_V2_API\' AFTER `date_inserted`;')
    op.execute('ALTER TABLE metrics_race_cache DROP PRIMARY KEY')
    op.execute('ALTER TABLE metrics_race_cache ADD PRIMARY KEY (`date_inserted`,`type`,`registered_flag`,`consent_flag`,`core_flag`,`hpo_id`,`hpo_name`,`date`)')

    op.alter_column('participant_gender_answers', 'created', existing_type=mysql.DATETIME(fsp=6), nullable=True,
                    existing_server_default=sa.text(u'current_timestamp(6)'))
    op.alter_column('participant_gender_answers', 'modified', existing_type=mysql.DATETIME(fsp=6), nullable=True,
                    existing_server_default=sa.text(u'current_timestamp(6) ON UPDATE current_timestamp(6)'))

    op.alter_column('participant_race_answers', 'created', existing_type=mysql.DATETIME(fsp=6),
                    nullable=True, existing_server_default=sa.text(u'current_timestamp(6)'))
    op.alter_column('participant_race_answers', 'modified', existing_type=mysql.DATETIME(fsp=6),
                    nullable=True, existing_server_default=sa.text(
        u'current_timestamp(6) ON UPDATE current_timestamp(6)'))

    # ### end Alembic commands ###

    add_table_history_table('participant_gender_answers', op)
    op.execute("""call sp_drop_index_if_exists('participant_gender_answers_history', 'code_id')""")
    op.execute("""call sp_drop_index_if_exists('participant_gender_answers_history', 'participant_id')""")

    add_table_history_table('participant_race_answers', op)
    op.execute("""call sp_drop_index_if_exists('participant_race_answers_history', 'code_id')""")
    op.execute("""call sp_drop_index_if_exists('participant_race_answers_history', 'participant_id')""")


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('metrics_race_cache', 'type')
    op.drop_column('metrics_gender_cache', 'type')
    op.drop_table('participant_race_answers')
    op.drop_table('participant_gender_answers')
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

