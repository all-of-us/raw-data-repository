"""add indices to user_event_metrics and genomic_informing_loop

Revision ID: 2ea1a8e0acb0
Revises: 7ce6f2bffe0b
Create Date: 2022-10-05 09:45:12.981233

"""
from alembic import op
import sqlalchemy as sa
import rdr_service.model.utils


from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus

# revision identifiers, used by Alembic.
revision = '2ea1a8e0acb0'
down_revision = '7ce6f2bffe0b'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"upgrade_{engine_name}"]()
    else:
        pass


def downgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"downgrade_{engine_name}"]()
    else:
        pass



def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('genomic_informing_loop', sa.Column('created_from_metric_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_genomic_informing_loop_decision_value'), 'genomic_informing_loop', ['decision_value'], unique=False)
    op.create_index(op.f('ix_genomic_informing_loop_event_authored_time'), 'genomic_informing_loop', ['event_authored_time'], unique=False)
    op.create_index(op.f('ix_genomic_informing_loop_event_type'), 'genomic_informing_loop', ['event_type'], unique=False)
    op.create_index(op.f('ix_genomic_informing_loop_module_type'), 'genomic_informing_loop', ['module_type'], unique=False)
    op.create_foreign_key(None, 'genomic_informing_loop', 'user_event_metrics', ['created_from_metric_id'], ['id'])
    op.create_index(op.f('ix_user_event_metrics_created_at'), 'user_event_metrics', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_event_metrics_event_name'), 'user_event_metrics', ['event_name'], unique=False)
    # ### end Alembic commands ###


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_event_metrics_event_name'), table_name='user_event_metrics')
    op.drop_index(op.f('ix_user_event_metrics_created_at'), table_name='user_event_metrics')
    op.drop_constraint(None, 'genomic_informing_loop', type_='foreignkey')
    op.drop_index(op.f('ix_genomic_informing_loop_module_type'), table_name='genomic_informing_loop')
    op.drop_index(op.f('ix_genomic_informing_loop_event_type'), table_name='genomic_informing_loop')
    op.drop_index(op.f('ix_genomic_informing_loop_event_authored_time'), table_name='genomic_informing_loop')
    op.drop_index(op.f('ix_genomic_informing_loop_decision_value'), table_name='genomic_informing_loop')
    op.drop_column('genomic_informing_loop', 'created_from_metric_id')
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
