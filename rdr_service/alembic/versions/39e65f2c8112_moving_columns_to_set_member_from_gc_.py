"""moving_columns_to_set_member_from_gc_metrics

Revision ID: 39e65f2c8112
Revises: 7490afb4beb3
Create Date: 2020-01-21 12:20:26.145005

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '39e65f2c8112'
down_revision = '7490afb4beb3'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"upgrade_{engine_name}"]()
    else:
        pass


def downgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"downgrade_{engine_name}"]()
    else:
        pass


def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('genomic_gc_validation_metrics', 'consent_for_ror')
    op.drop_column('genomic_gc_validation_metrics', 'reconcile_manifest_job_run_id')
    op.drop_column('genomic_gc_validation_metrics', 'withdrawn_status')
    op.drop_column('genomic_gc_validation_metrics', 'reconcile_sequencing_job_run_id')
    op.drop_column('genomic_gc_validation_metrics', 'sequencing_file_name')
    op.add_column('genomic_set_member', sa.Column('consent_for_ror', sa.String(length=10), nullable=True))
    op.add_column('genomic_set_member', sa.Column('cvl_manifest_arr_job_run_id', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('cvl_manifest_wgs_job_run_id', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('reconcile_cvl_job_run_id', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('reconcile_manifest_job_run_id', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('reconcile_sequencing_job_run_id', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('sequencing_file_name', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member', sa.Column('withdrawn_status', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'genomic_set_member', 'genomic_job_run', ['reconcile_manifest_job_run_id'], ['id'])
    op.create_foreign_key(None, 'genomic_set_member', 'genomic_job_run', ['cvl_manifest_arr_job_run_id'], ['id'])
    op.create_foreign_key(None, 'genomic_set_member', 'genomic_job_run', ['cvl_manifest_wgs_job_run_id'], ['id'])
    op.create_foreign_key(None, 'genomic_set_member', 'genomic_job_run', ['reconcile_sequencing_job_run_id'], ['id'])
    op.create_foreign_key(None, 'genomic_set_member', 'genomic_job_run', ['reconcile_cvl_job_run_id'], ['id'])
    # ### end Alembic commands ###


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'genomic_set_member', type_='foreignkey')
    op.drop_constraint(None, 'genomic_set_member', type_='foreignkey')
    op.drop_constraint(None, 'genomic_set_member', type_='foreignkey')
    op.drop_constraint(None, 'genomic_set_member', type_='foreignkey')
    op.drop_constraint(None, 'genomic_set_member', type_='foreignkey')
    op.drop_column('genomic_set_member', 'withdrawn_status')
    op.drop_column('genomic_set_member', 'sequencing_file_name')
    op.drop_column('genomic_set_member', 'reconcile_sequencing_job_run_id')
    op.drop_column('genomic_set_member', 'reconcile_manifest_job_run_id')
    op.drop_column('genomic_set_member', 'reconcile_cvl_job_run_id')
    op.drop_column('genomic_set_member', 'cvl_manifest_wgs_job_run_id')
    op.drop_column('genomic_set_member', 'cvl_manifest_arr_job_run_id')
    op.drop_column('genomic_set_member', 'consent_for_ror')
    op.add_column('genomic_gc_validation_metrics', sa.Column('sequencing_file_name', mysql.VARCHAR(length=128), nullable=True))
    op.add_column('genomic_gc_validation_metrics', sa.Column('reconcile_sequencing_job_run_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('genomic_gc_validation_metrics', sa.Column('withdrawn_status', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('genomic_gc_validation_metrics', sa.Column('reconcile_manifest_job_run_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('genomic_gc_validation_metrics', sa.Column('consent_for_ror', mysql.VARCHAR(length=10), nullable=True))
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
