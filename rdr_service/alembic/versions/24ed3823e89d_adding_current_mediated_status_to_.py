"""adding current mediated status to health data stream status column calc

Revision ID: 24ed3823e89d
Revises: 9b3fb63fd6d1, 2b08d04697aa
Create Date: 2023-08-16 08:27:25.892415

"""
from alembic import op
import sqlalchemy as sa
import rdr_service.model.utils
from sqlalchemy.dialects import mysql

from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus

# revision identifiers, used by Alembic.
revision = '24ed3823e89d'
down_revision = ('9b3fb63fd6d1', '2b08d04697aa')
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()



def upgrade_rdr():
    op.execute("""
        ALTER TABLE participant_summary
        MODIFY COLUMN health_data_stream_sharing_status smallint(6) GENERATED ALWAYS AS (
            (case
                when is_ehr_data_available then 3
                when is_participant_mediated_ehr_data_available then 3
                when was_ehr_data_available then 2
                when was_participant_mediated_ehr_available then 2
                else 1
            end)
        ) STORED
    """)


def downgrade_rdr():
    op.execute("""
        ALTER TABLE participant_summary
        MODIFY COLUMN health_data_stream_sharing_status smallint(6) GENERATED ALWAYS AS (
            (case
                when is_ehr_data_available then 3
                when was_ehr_data_available then 2
                when was_participant_mediated_ehr_available then 2
                else 1
            end)
        ) STORED
    """)


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

