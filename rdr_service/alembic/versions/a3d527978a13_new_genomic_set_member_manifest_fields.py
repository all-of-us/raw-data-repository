"""new genomic_set_member manifest fields.

Revision ID: a3d527978a13
Revises: 8f57152e65f4
Create Date: 2020-02-25 14:34:27.120513

"""
from alembic import op
import sqlalchemy as sa
import model.utils


from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus

# revision identifiers, used by Alembic.
revision = 'a3d527978a13'
down_revision = '8f57152e65f4'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"upgrade_{engine_name}"]()
    else:
        pass


def downgrade(engine_name):
    if engine_name == "rdr" or engine_name == "metrics":
        globals()[f"downgrade_{engine_name}"]()
    else:
        pass



def upgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('genomic_set_member', sa.Column('gc_manifest_box_plate_id', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member',
                  sa.Column('gc_manifest_box_storage_unit_id', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_contact', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_email', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member',
                  sa.Column('gc_manifest_failure_description', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_failure_mode', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_matrix_id', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_parent_sample_id', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_quantity_ul', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_sample_source', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_study', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_study_pi', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_test_name', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member',
                  sa.Column('gc_manifest_total_concentration_ng_per_ul', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_total_dna_ng', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_tracking_number', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_treatments', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member',
                  sa.Column('gc_manifest_visit_description', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member', sa.Column('gc_manifest_well_position', sa.String(length=10), nullable=True))

    # Add the columns to the history table
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_box_plate_id', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history',
                  sa.Column('gc_manifest_box_storage_unit_id', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_contact', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_email', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history',
                  sa.Column('gc_manifest_failure_description', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_failure_mode', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_matrix_id', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_parent_sample_id', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_quantity_ul', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_sample_source', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_study', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_study_pi', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_test_name', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history',
                  sa.Column('gc_manifest_total_concentration_ng_per_ul', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_total_dna_ng', sa.Integer(), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_tracking_number', sa.String(length=50), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_treatments', sa.String(length=20), nullable=True))
    op.add_column('genomic_set_member_history',
                  sa.Column('gc_manifest_visit_description', sa.String(length=128), nullable=True))
    op.add_column('genomic_set_member_history', sa.Column('gc_manifest_well_position', sa.String(length=10), nullable=True))

    # ### end Alembic commands ###


def downgrade_rdr():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('genomic_set_member', 'gc_manifest_well_position')
    op.drop_column('genomic_set_member', 'gc_manifest_visit_description')
    op.drop_column('genomic_set_member', 'gc_manifest_treatments')
    op.drop_column('genomic_set_member', 'gc_manifest_tracking_number')
    op.drop_column('genomic_set_member', 'gc_manifest_total_dna_ng')
    op.drop_column('genomic_set_member', 'gc_manifest_total_concentration_ng_per_ul')
    op.drop_column('genomic_set_member', 'gc_manifest_test_name')
    op.drop_column('genomic_set_member', 'gc_manifest_study_pi')
    op.drop_column('genomic_set_member', 'gc_manifest_study')
    op.drop_column('genomic_set_member', 'gc_manifest_sample_source')
    op.drop_column('genomic_set_member', 'gc_manifest_quantity_ul')
    op.drop_column('genomic_set_member', 'gc_manifest_parent_sample_id')
    op.drop_column('genomic_set_member', 'gc_manifest_matrix_id')
    op.drop_column('genomic_set_member', 'gc_manifest_failure_mode')
    op.drop_column('genomic_set_member', 'gc_manifest_failure_description')
    op.drop_column('genomic_set_member', 'gc_manifest_email')
    op.drop_column('genomic_set_member', 'gc_manifest_contact')
    op.drop_column('genomic_set_member', 'gc_manifest_box_storage_unit_id')
    op.drop_column('genomic_set_member', 'gc_manifest_box_plate_id')

    # Remove from history table
    op.drop_column('genomic_set_member_history', 'gc_manifest_well_position')
    op.drop_column('genomic_set_member_history', 'gc_manifest_visit_description')
    op.drop_column('genomic_set_member_history', 'gc_manifest_treatments')
    op.drop_column('genomic_set_member_history', 'gc_manifest_tracking_number')
    op.drop_column('genomic_set_member_history', 'gc_manifest_total_dna_ng')
    op.drop_column('genomic_set_member_history', 'gc_manifest_total_concentration_ng_per_ul')
    op.drop_column('genomic_set_member_history', 'gc_manifest_test_name')
    op.drop_column('genomic_set_member_history', 'gc_manifest_study_pi')
    op.drop_column('genomic_set_member_history', 'gc_manifest_study')
    op.drop_column('genomic_set_member_history', 'gc_manifest_sample_source')
    op.drop_column('genomic_set_member_history', 'gc_manifest_quantity_ul')
    op.drop_column('genomic_set_member_history', 'gc_manifest_parent_sample_id')
    op.drop_column('genomic_set_member_history', 'gc_manifest_matrix_id')
    op.drop_column('genomic_set_member_history', 'gc_manifest_failure_mode')
    op.drop_column('genomic_set_member_history', 'gc_manifest_failure_description')
    op.drop_column('genomic_set_member_history', 'gc_manifest_email')
    op.drop_column('genomic_set_member_history', 'gc_manifest_contact')
    op.drop_column('genomic_set_member_history', 'gc_manifest_box_storage_unit_id')
    op.drop_column('genomic_set_member_history', 'gc_manifest_box_plate_id')
    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
