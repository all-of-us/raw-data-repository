"""rename isDuplicate column

Revision ID: 978d12edb6c5
Revises: e7cf7c2a25f2
Create Date: 2022-01-12 19:44:59.564063

"""
from alembic import op
import sqlalchemy as sa
import rdr_service.model.utils
from sqlalchemy.dialects import mysql

from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus

# revision identifiers, used by Alembic.
revision = '978d12edb6c5'
down_revision = 'e7cf7c2a25f2'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()[f"upgrade_{engine_name}"]()


def downgrade(engine_name):
    globals()[f"downgrade_{engine_name}"]()

# Manually edited commands to force alter_column instead of add_column/drop_column sequence.  Maintains nullable=True
# from original column creation (1dff4309d707_hash_and_duplicate_flag_on_.py) to minimize impact of migration
def upgrade_rdr():
    op.alter_column('questionnaire_response', 'is_duplicate', new_column_name='classification_type',
                    existing_type=mysql.TINYINT, nullable=True)
    # Production data has no nulls but adding this UPDATE to ensure lower environments are clean after migration
    op.execute('UPDATE questionnaire_response SET classification_type = 0 where classification_type is NULL')
    # ### end Alembic commands ###


def downgrade_rdr():
    op.alter_column('questionnaire_response', 'classification_type', new_column_name='is_duplicate',
                    existing_type=mysql.TINYINT, nullable=True)

    # ### end Alembic commands ###


def upgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_metrics():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
