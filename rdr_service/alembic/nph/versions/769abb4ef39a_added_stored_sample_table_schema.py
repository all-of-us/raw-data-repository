"""Added 'stored_sample' table schema

Revision ID: 769abb4ef39a
Revises: e48c9b943dbf
Create Date: 2023-01-29 16:39:35.074265

"""

# pylint: disable=unused-import
# pylint: disable=line-too-long
from alembic import op
import sqlalchemy as sa
import rdr_service.model.utils
from sqlalchemy.dialects import mysql

from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus
from rdr_service.model.study_nph_enums import StoredSampleStatus


# revision identifiers, used by Alembic.
revision = '769abb4ef39a'
down_revision = 'e48c9b943dbf'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()



def upgrade_nph():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stored_sample',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('modified', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('biobank_modified', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('biobank_id', sa.BigInteger(), nullable=True),
    sa.Column('sample_id', sa.BigInteger(), nullable=True),
    sa.Column('lims_id', sa.String(length=64), nullable=True),
    sa.Column('status', rdr_service.model.utils.Enum(StoredSampleStatus), nullable=True),
    sa.Column('disposition', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['biobank_id'], ['nph.participant.biobank_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='nph'
    )
    op.drop_constraint('consent_event_ibfk_3', 'consent_event', type_='foreignkey')
    op.drop_constraint('consent_event_ibfk_1', 'consent_event', type_='foreignkey')
    op.drop_constraint('consent_event_ibfk_2', 'consent_event', type_='foreignkey')
    op.create_foreign_key(None, 'consent_event', 'participant_event_activity', ['event_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'consent_event', 'consent_event_type', ['event_type_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'consent_event', 'participant', ['participant_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('enrollment_event_ibfk_3', 'enrollment_event', type_='foreignkey')
    op.drop_constraint('enrollment_event_ibfk_2', 'enrollment_event', type_='foreignkey')
    op.drop_constraint('enrollment_event_ibfk_1', 'enrollment_event', type_='foreignkey')
    op.create_foreign_key(None, 'enrollment_event', 'participant', ['participant_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'enrollment_event', 'enrollment_event_type', ['event_type_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'enrollment_event', 'participant_event_activity', ['event_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('order_ibfk_1', 'order', type_='foreignkey')
    op.drop_constraint('order_ibfk_5', 'order', type_='foreignkey')
    op.drop_constraint('order_ibfk_2', 'order', type_='foreignkey')
    op.drop_constraint('order_ibfk_6', 'order', type_='foreignkey')
    op.drop_constraint('order_ibfk_3', 'order', type_='foreignkey')
    op.drop_constraint('order_ibfk_4', 'order', type_='foreignkey')
    op.create_foreign_key(None, 'order', 'site', ['collected_site'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'order', 'study_category', ['category_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'order', 'participant', ['participant_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'order', 'site', ['finalized_site'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'order', 'site', ['created_site'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'order', 'site', ['amended_site'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('ordered_sample_ibfk_1', 'ordered_sample', type_='foreignkey')
    op.drop_constraint('ordered_sample_ibfk_2', 'ordered_sample', type_='foreignkey')
    op.create_foreign_key(None, 'ordered_sample', 'ordered_sample', ['parent_sample_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'ordered_sample', 'order', ['order_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('pairing_event_ibfk_1', 'pairing_event', type_='foreignkey')
    op.drop_constraint('pairing_event_ibfk_3', 'pairing_event', type_='foreignkey')
    op.drop_constraint('pairing_event_ibfk_4', 'pairing_event', type_='foreignkey')
    op.drop_constraint('pairing_event_ibfk_2', 'pairing_event', type_='foreignkey')
    op.create_foreign_key(None, 'pairing_event', 'site', ['site_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'pairing_event', 'participant', ['participant_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'pairing_event', 'pairing_event_type', ['event_type_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'pairing_event', 'participant_event_activity', ['event_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.alter_column('participant', 'biobank_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=False)
    op.drop_constraint('participant_event_activity_ibfk_2', 'participant_event_activity', type_='foreignkey')
    op.drop_constraint('participant_event_activity_ibfk_1', 'participant_event_activity', type_='foreignkey')
    op.create_foreign_key(None, 'participant_event_activity', 'participant', ['participant_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'participant_event_activity', 'activity', ['activity_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('sample_export_ibfk_1', 'sample_export', type_='foreignkey')
    op.drop_constraint('sample_export_ibfk_2', 'sample_export', type_='foreignkey')
    op.create_foreign_key(None, 'sample_export', 'sample_update', ['sample_update_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.create_foreign_key(None, 'sample_export', 'biobank_file_export', ['export_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('sample_update_ibfk_1', 'sample_update', type_='foreignkey')
    op.create_foreign_key(None, 'sample_update', 'ordered_sample', ['rdr_ordered_sample_id'], ['id'], source_schema='nph', referent_schema='nph')
    op.drop_constraint('study_category_ibfk_1', 'study_category', type_='foreignkey')
    op.create_foreign_key(None, 'study_category', 'study_category', ['parent_id'], ['id'], source_schema='nph', referent_schema='nph')
    # ### end Alembic commands ###


def downgrade_nph():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'study_category', schema='nph', type_='foreignkey')
    op.create_foreign_key('study_category_ibfk_1', 'study_category', 'study_category', ['parent_id'], ['id'])
    op.drop_constraint(None, 'sample_update', schema='nph', type_='foreignkey')
    op.create_foreign_key('sample_update_ibfk_1', 'sample_update', 'ordered_sample', ['rdr_ordered_sample_id'], ['id'])
    op.drop_constraint(None, 'sample_export', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'sample_export', schema='nph', type_='foreignkey')
    op.create_foreign_key('sample_export_ibfk_2', 'sample_export', 'biobank_file_export', ['export_id'], ['id'])
    op.create_foreign_key('sample_export_ibfk_1', 'sample_export', 'sample_update', ['sample_update_id'], ['id'])
    op.drop_constraint(None, 'participant_event_activity', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'participant_event_activity', schema='nph', type_='foreignkey')
    op.create_foreign_key('participant_event_activity_ibfk_1', 'participant_event_activity', 'activity', ['activity_id'], ['id'])
    op.create_foreign_key('participant_event_activity_ibfk_2', 'participant_event_activity', 'participant', ['participant_id'], ['id'])
    op.alter_column('participant', 'biobank_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=True)
    op.drop_constraint(None, 'pairing_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'pairing_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'pairing_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'pairing_event', schema='nph', type_='foreignkey')
    op.create_foreign_key('pairing_event_ibfk_2', 'pairing_event', 'participant_event_activity', ['event_id'], ['id'])
    op.create_foreign_key('pairing_event_ibfk_4', 'pairing_event', 'pairing_event_type', ['event_type_id'], ['id'])
    op.create_foreign_key('pairing_event_ibfk_3', 'pairing_event', 'site', ['site_id'], ['id'])
    op.create_foreign_key('pairing_event_ibfk_1', 'pairing_event', 'participant', ['participant_id'], ['id'])
    op.drop_constraint(None, 'ordered_sample', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'ordered_sample', schema='nph', type_='foreignkey')
    op.create_foreign_key('ordered_sample_ibfk_2', 'ordered_sample', 'ordered_sample', ['parent_sample_id'], ['id'])
    op.create_foreign_key('ordered_sample_ibfk_1', 'ordered_sample', 'order', ['order_id'], ['id'])
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'order', schema='nph', type_='foreignkey')
    op.create_foreign_key('order_ibfk_4', 'order', 'participant', ['participant_id'], ['id'])
    op.create_foreign_key('order_ibfk_3', 'order', 'study_category', ['category_id'], ['id'])
    op.create_foreign_key('order_ibfk_6', 'order', 'site', ['created_site'], ['id'])
    op.create_foreign_key('order_ibfk_2', 'order', 'site', ['finalized_site'], ['id'])
    op.create_foreign_key('order_ibfk_5', 'order', 'site', ['collected_site'], ['id'])
    op.create_foreign_key('order_ibfk_1', 'order', 'site', ['amended_site'], ['id'])
    op.drop_constraint(None, 'enrollment_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'enrollment_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'enrollment_event', schema='nph', type_='foreignkey')
    op.create_foreign_key('enrollment_event_ibfk_1', 'enrollment_event', 'participant', ['participant_id'], ['id'])
    op.create_foreign_key('enrollment_event_ibfk_2', 'enrollment_event', 'participant_event_activity', ['event_id'], ['id'])
    op.create_foreign_key('enrollment_event_ibfk_3', 'enrollment_event', 'enrollment_event_type', ['event_type_id'], ['id'])
    op.drop_constraint(None, 'consent_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'consent_event', schema='nph', type_='foreignkey')
    op.drop_constraint(None, 'consent_event', schema='nph', type_='foreignkey')
    op.create_foreign_key('consent_event_ibfk_2', 'consent_event', 'consent_event_type', ['event_type_id'], ['id'])
    op.create_foreign_key('consent_event_ibfk_1', 'consent_event', 'participant', ['participant_id'], ['id'])
    op.create_foreign_key('consent_event_ibfk_3', 'consent_event', 'participant_event_activity', ['event_id'], ['id'])
    op.drop_table('stored_sample', schema='nph')
    # ### end Alembic commands ###
