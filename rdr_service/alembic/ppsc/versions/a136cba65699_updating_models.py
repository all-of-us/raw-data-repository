"""updating_models

Revision ID: a136cba65699
Revises: 73e13a9bccc4
Create Date: 2024-09-25 16:07:22.478849

"""
from alembic import op
import sqlalchemy as sa
import rdr_service.model.utils
from sqlalchemy.dialects import mysql

from rdr_service.participant_enums import PhysicalMeasurementsStatus, QuestionnaireStatus, OrderStatus
from rdr_service.participant_enums import WithdrawalStatus, WithdrawalReason, SuspensionStatus, QuestionnaireDefinitionStatus
from rdr_service.participant_enums import EnrollmentStatus, Race, SampleStatus, OrganizationType, BiobankOrderStatus
from rdr_service.participant_enums import OrderShipmentTrackingStatus, OrderShipmentStatus
from rdr_service.participant_enums import MetricSetType, MetricsKey, GenderIdentity
from rdr_service.model.base import add_table_history_table, drop_table_history_table
from rdr_service.model.code import CodeType
from rdr_service.model.site_enums import SiteStatus, EnrollingStatus, DigitalSchedulingStatus, ObsoleteStatus
from rdr_service.ppsc.ppsc_enums import DataSyncTransferType, AuthType

# revision identifiers, used by Alembic.
revision = 'a136cba65699'
down_revision = '73e13a9bccc4'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_ppsc():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ppsc_data_transfer_auth',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('modified', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('auth_type', rdr_service.model.utils.Enum(AuthType), nullable=True),
    sa.Column('auth_url', sa.String(length=512), nullable=False),
    sa.Column('client_id', sa.String(length=512), nullable=False),
    sa.Column('client_secret', sa.String(length=512), nullable=False),
    sa.Column('access_token', sa.String(length=1024), nullable=True),
    sa.Column('expires', sa.String(length=256), nullable=True),
    sa.Column('last_generated', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True),
    sa.Column('ignore_flag', mysql.TINYINT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ppsc'
    )
    op.create_table('ppsc_data_transfer_endpoint',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('modified', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('base_url', sa.String(length=512), nullable=False),
    sa.Column('endpoint', sa.String(length=512), nullable=False),
    sa.Column('data_sync_transfer_type', rdr_service.model.utils.Enum(DataSyncTransferType), nullable=False),
    sa.Column('ignore_flag', mysql.TINYINT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ppsc'
    )
    op.create_table('ppsc_data_transfer_record',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('modified', rdr_service.model.utils.UTCDateTime(), nullable=True),
    sa.Column('participant_id', sa.BigInteger(), nullable=True),
    sa.Column('data_sync_transfer_type', rdr_service.model.utils.Enum(DataSyncTransferType), nullable=True),
    sa.Column('request_payload', mysql.JSON(), nullable=True),
    sa.Column('response_code', sa.String(length=128), nullable=True),
    sa.Column('ignore_flag', mysql.TINYINT(), nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['ppsc.participant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='ppsc'
    )
    op.add_column('ppsc_biobank_sample', sa.Column('first_time_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.add_column('ppsc_biobank_sample', sa.Column('last_time_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.drop_column('ppsc_biobank_sample', 'first_time_date')
    op.drop_column('ppsc_biobank_sample', 'last_time_date')
    op.add_column('ppsc_core', sa.Column('has_core_data_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.drop_column('ppsc_core', 'has_core_data_date')
    op.add_column('ppsc_ehr', sa.Column('first_time_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.add_column('ppsc_ehr', sa.Column('last_time_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.drop_column('ppsc_ehr', 'first_time_date')
    op.drop_column('ppsc_ehr', 'last_time_date')
    op.add_column('ppsc_health_data', sa.Column('health_data_stream_sharing_status_date_time', rdr_service.model.utils.UTCDateTime6(fsp=6), nullable=True))
    op.drop_column('ppsc_health_data', 'health_data_stream_sharing_status_date')
    # ### end Alembic commands ###


def downgrade_ppsc():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ppsc_health_data', sa.Column('health_data_stream_sharing_status_date', mysql.DATETIME(fsp=6), nullable=True))
    op.drop_column('ppsc_health_data', 'health_data_stream_sharing_status_date_time')
    op.add_column('ppsc_ehr', sa.Column('last_time_date', mysql.DATETIME(fsp=6), nullable=True))
    op.add_column('ppsc_ehr', sa.Column('first_time_date', mysql.DATETIME(fsp=6), nullable=True))
    op.drop_column('ppsc_ehr', 'last_time_date_time')
    op.drop_column('ppsc_ehr', 'first_time_date_time')
    op.add_column('ppsc_core', sa.Column('has_core_data_date', mysql.DATETIME(fsp=6), nullable=True))
    op.drop_column('ppsc_core', 'has_core_data_date_time')
    op.add_column('ppsc_biobank_sample', sa.Column('last_time_date', mysql.DATETIME(fsp=6), nullable=True))
    op.add_column('ppsc_biobank_sample', sa.Column('first_time_date', mysql.DATETIME(fsp=6), nullable=True))
    op.drop_column('ppsc_biobank_sample', 'last_time_date_time')
    op.drop_column('ppsc_biobank_sample', 'first_time_date_time')
    op.drop_table('ppsc_data_transfer_record', schema='ppsc')
    op.drop_table('ppsc_data_transfer_endpoint', schema='ppsc')
    op.drop_table('ppsc_data_transfer_auth', schema='ppsc')
    # ### end Alembic commands ###

